% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformation.R
\name{Transformation}
\alias{Transformation}
\title{A logical transformation}
\usage{
Transformation(name, namespace = NULL, version = NULL)
}
\arguments{
\item{name}{The name of the transformation}

\item{namespace}{The namespace of the xform (optional)}

\item{version}{The version of the xform (optional)}
}
\value{
Transformation object
}
\description{
A logical transformation. This is basically defining one or more
entries in the transformation catalog. You can think of it like a macro
for adding <uses> to your jobs. You can define a transformation that
uses several files and/or executables, and refer to it when creating
a job. If you do, then all of the uses defined for that transformation
will be copied to the job during planning.

This code:\cr
\code{in <- File("input.txt")}\cr
\code{exe <- Executable("exe")}\cr
\code{t <- Transformation(namespace="foo", name="bar", version="baz")}\cr
\code{t <- Uses(t, in)}\cr
\code{t <- Uses(t, exe)}\cr
\code{j <- Job(t)}

is equivalent to:\cr
\code{in <- File("input.txt")}\cr
\code{exe <- Executable("exe")}\cr
\code{j <- Job(namespace="foo", name="bar", version="baz")}\cr
\code{j <- Uses(j, in)}\cr
\code{j <- Uses(j, exe)}\cr
}
\details{
The name argument can be either a string or an \code{Executable} object.
If it is an \code{Executable} object, then the \code{Transformation} inherits
its name, namespace and version from the \code{Executable}, and the
\code{Transformation} is set to use the Executable with \code{link=input},
\code{transfer=TRUE}, and \code{register=FALSE}.
}
\examples{
Transformation(name='mDiff')
Transformation(namespace='montage',name='mDiff')
Transformation(namespace='montage',name='mDiff',version='3.0')

# Using one executable:
  mProjectPP <- Executable(namespace="montage", name="mProjectPP", version="3.0")
  x_mProjectPP <- Transformation(mProjectPP)

# Using several executables:
  mDiff <- Executable(namespace="montage", name="mProjectPP", version="3.0")
  mFitplane <- Executable(namespace="montage", name="mFitplane", version="3.0")
  mDiffFit <- Executable(namespace="montage", name="mDiffFit", version="3.0")
  x_mDiffFit <- Transformation(mDiffFit)
  x_mDiffFit <- Uses(x_mDiffFit, mDiff)
  x_mDiffFit <- Uses(x_mDiffFit, mFitplane)

# Config files too:
  conf <- File("jbsim.conf")
  jbsim <- Executable(namespace="scec",name="jbsim")
  x_jbsim <- Transformation(jbsim)
  x_jbsim <- Uses(x_jbsim, conf)

}

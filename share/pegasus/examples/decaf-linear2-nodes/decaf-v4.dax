<?xml version="1.0" encoding="UTF-8"?>
<!-- generated: 2017-06-02 09:48:55.798579 -->
<!-- generated by: bamboo -->
<!-- generator: python -->
<adag xmlns="http://pegasus.isi.edu/schema/DAX" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/DAX http://pegasus.isi.edu/schema/dax-3.6.xsd" version="3.6" name="decaf">
	<metadata key="name">decaf example</metadata>
	<metadata key="createdby">Karan Vahi</metadata>

	<job id="ID0000001" namespace="pegasus" name="prepare-input-data" version="4.0">
	  <argument>-a preprocess -T60 -i <file name="f.a"/> -o <file name="f.b1"/> -o <file name="f.b2"/></argument>
	  <metadata key="time">60</metadata>
	  <uses name="f.a" link="input"/>
	  <uses name="f.b1" link="output" register="true" transfer="true"/>
	  <uses name="f.b2" link="output" register="true" transfer="true"/>
	</job>

	<dflow id="ID0000002"  name="decaf">
	  <!-- to indicate the input and output file that a decaf
	       dataflow requires -->
      <uses name="f.b1" link="input"/>
    
	  <!-- this example does not generate any output file
	  <uses name="f.out" link="output" register="true" transfer="true"/>
	  -->
	  <job id="ID0000003" name="linear_2nodes_producer">
	    <decaf key="start_proc">0</decaf>
	    <decaf key="nprocs">4</decaf>
	    <decaf key="func">prod</decaf>
	  </job>
	  <job id="ID0000004" name="linear_2nodes_consumer">
	    <decaf key="start_proc">6</decaf>
	    <decaf key="nprocs">2</decaf>
	    <decaf key="func">con</decaf>
	  </job>

	  <!-- dependencies between the jobs are represented as link
	  jobs. that is how the decaf paper describes them -->
	  <link id="ID0000005" name="linear_2nodes_link">
	    	<child ref="ID0000004">
		  <parent ref="ID0000003"/>
		</child>

		<decaf key="start_proc">4</decaf>
		<decaf key="nprocs">2</decaf>
        <decaf key="name">prod_con</decaf>
        <decaf key="transport">mpi</decaf>
        <decaf key="sourcePort">out</decaf>
        <decaf key="targetPort">in</decaf>
		<decaf key="func">dflow</decaf>
		<decaf key="prod_dflow_redist">count</decaf>
		<decaf key="path">${DECAF_PREFIX}/examples/direct/mod_linear_2nodes.so</decaf>
		<decaf key="dflow_con_redist">count</decaf>
	  </link>
	</dflow>

	<child ref="ID0000002">
		<parent ref="ID0000001"/>
	</child>
	
</adag>

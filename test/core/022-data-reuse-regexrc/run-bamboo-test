#!/bin/bash

set -e
set -v

if [ X${testdir} = "X" ]; then
    testdir=`dirname  $0`
    export testdir
fi

TOPDIR=`pwd`

# generate the dax
export PYTHONPATH=`pegasus-config --python`
${testdir}/dax-generator.py >dax.xml

# create the site catalog
echo "" >f.a
echo "Hello!" >f.b0
echo "Hello world!" >f.c12

# create the site catalog
cat > sites.yml <<EOF
pegasus: "5.0"
sites:
 -
  name: "condorpool"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  profiles:
    condor:
      universe: "vanilla"
    pegasus:
      style: "condor"
 -
  name: "local"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  directories:
   -
    type: "sharedStorage"
    path: "$TOPDIR/outputs"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/outputs"
   -
    type: "sharedScratch"
    path: "$TOPDIR/work"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/work"
EOF

cat > rc.data <<EOF
f.a file://$TOPDIR/f.a pool="local"
"f\\.([x])" file://$TOPDIR/f.a pool="local" regex="true"
fa([x]) file://$TOPDIR/f.a pool="local" regex="true"
dir/file.x file://$TOPDIR/f.a pool="local"
dir/file.y file://$TOPDIR/f.a pool="local" regex="true"

f.b0 file://$TOPDIR/f.b0 pool="local"
f.c12 file://$TOPDIR/f.c12 pool="local"
f\.c2([0-9]) file://$TOPDIR/f.c12 pool="local" regex="true"
EOF

# plan and submit the  workflow
pegasus-plan \
    --conf ${testdir}/pegasusrc \
    --sites local \
    --dir work/submit \
    --output-sites local \
    --cleanup leaf \
    -vvvvv \
    dax.xml \
    | tee $TOPDIR/plan.out

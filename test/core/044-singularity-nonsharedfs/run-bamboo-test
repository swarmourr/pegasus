#!/bin/bash

set -e
set -o  pipefail

# this variable is expanded by the planner when
# parsing in the sites.xml file in the conf directory
TOPDIR=`pwd`
export TOPDIR

# pegasus bin directory is needed to find keg
BIN_DIR=`pegasus-config --bin`
PEGASUS_LOCAL_BIN_DIR=$BIN_DIR
export PEGASUS_LOCAL_BIN_DIR

# determine TEST_NAME to setup site catalog
if [ X${testdir} = "X" ]; then
    testdir=`dirname  $0`
fi
TESTDIR=$(cd $testdir && pwd)
TEST_NAME=`basename $TESTDIR`
export TEST_NAME



# generate the input file
echo "This is sample input to KEG" >f.a
shacmd=`sha256sum f.a`

sha=`echo $shacmd | sed -E 's/([a-z0-9]*).*/\1/'`
cat >./conf/rc.data<<EOF
f.a file://$TOPDIR/f.a site="condorpool" checksum.type="sha256" checksum.value="$sha"

EOF


# generate the dax
export PYTHONPATH=`pegasus-config --python`
./blackdiamond.py $BIN_DIR > blackdiamond.dax

# plan and submit the  workflow
pegasus-plan \
    --conf ./pegasusrc \
    --sites condorpool \
    --staging-site cartman-data \
    --output-sites local \
    --dir dags \
    --cluster horizontal \
    --force \
    -v \
    blackdiamond.dax | tee $TOPDIR/plan.out


WORK_DIR=`cat $TOPDIR/plan.out | grep pegasus-run | sed -E 's/.*pegasus-run[ ]+//'`
if [ "x$WORK_DIR" = "x" ]; then
    echo "Unable to determine work directory from the planner output"
    exit 1
fi
echo "work directory is $WORK_DIR"
cd $WORK_DIR


# make sure certain bash variables have the right values
for variable in pegasus_lite_enforce_strict_wp_check pegasus_lite_version_allow_wp_auto_download; do
    echo "Searching for $variable"
    for pegasus_lite_sh in `find $WORK_DIR -name \*ID\*.sh`; do
        for match in `(grep $variable $pegasus_lite_sh | awk '{print $1;}') 2>/dev/null `; do
            # variable can appear twice in the pegasus lite script
	    #echo "match is $match"
	    if (echo $match | grep $variable  | grep "false" ) >/dev/null 2>&1; then
		echo "Error: $pegasus_lite_sh has $variable set to false. Should be true"
		exit 1
            fi
        done
    done
done

# now we are good to submit
echo "Submitting the workflow for execution"
pegasus-run $WORK_DIR


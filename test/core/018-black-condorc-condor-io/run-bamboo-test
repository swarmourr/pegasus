#!/bin/bash

set -e
set -v

if [ X${testdir} = "X" ]; then
    testdir=`dirname  $0`
    export testdir
fi

TOPDIR=`pwd`

# generate the input file
echo "This is sample input to KEG" > f.a

# output directory
mkdir -p outputs

# build the dax generator
export PYTHONPATH=`pegasus-config --python`
$testdir/blackdiamond.py /usr > blackdiamond.dax

# create the site catalog
cat > sites.yml <<EOF
pegasus: "5.0"
sites:
 -
  name: "isi-condorc"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  grids:
   -
    type: "condor"
    contact: "ccg-testing1.isi.edu"
    scheduler: "condor"
    jobtype: "auxillary"
   -
    type: "condor"
    contact: "ccg-testing1.isi.edu"
    scheduler: "condor"
    jobtype: "compute"
  profiles:
    condor:
      universe: "vanilla"
    pegasus:
      clusters.num: "1"
      style: "condorc"
 -
  name: "condorpool"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  profiles:
    condor:
      universe: "vanilla"
    pegasus:
      style: "condor"
 -
  name: "local"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  directories:
   -
    type: "sharedStorage"
    path: "$TOPDIR/outputs"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/outputs"
   -
    type: "sharedScratch"
    path: "$TOPDIR/work"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/work"
EOF

# plan and submit the  workflow
pegasus-plan \
    --conf $testdir/pegasusrc \
    --sites isi-condorc \
    --output-sites local \
    --dir work/submit \
    --cleanup leaf \
    --cluster horizontal \
    --submit \
    blackdiamond.dax \
    | tee plan.out

